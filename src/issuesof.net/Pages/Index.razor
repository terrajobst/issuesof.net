@page "/"

@using IssueDb.Querying;

<IndexStatus />

@if (IndexService.Index is not null)
{
    <form>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Filter</button>
                <div class="dropdown-menu small">
                    <a class="dropdown-item" target="_blank" href="help">Syntax help</a>
                    <div role="separator" class="dropdown-divider"></div>
                    <a class="dropdown-item" target="_blank" href="https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests">GitHub syntax reference</a>
                </div>
            </div>
            <div class="form-control query-editor">
                <input id="myTextarea" type="text" class="form-control" placeholder="Search" />
            </div>
        </div>
    </form>

    <div class="gh-table-header d-flex justify-content-between">

        <div>
            @if (SearchResults.IsGrouped)
        {
            <div class="mr-3 btn-group btn-group-sm" role="group" aria-label="Basic example">
                    <button class="btn btn-secondary" @onclick="ExpandAll" title="Expand All"><span class="oi oi-plus"></span></button>
                    <button class="btn btn-secondary" @onclick="CollapseAll" title="Collapse All"><span class="oi oi-minus"></span></button>
                </div>
        }
            @($"{SearchResults.IssueCount:N0} issues")
        </div>

        <div class="float-right">
            <a class="btn btn-sm btn-secondary" href="@GetDownloadLink()">Download</a>
        </div>
    </div>

    <table class="table table-hover">
        <tbody>
            @{ 
            var includeUpdatedAt = SearchResults.Sorts.Any(s => s == IssueSort.UpdatedAscending ||
                                                                s == IssueSort.UpdatedDescending);
        }
            @foreach (var issueOrGroup in SearchResults.GetPage(PageNumber))
        {
            if (issueOrGroup.IsGroup)
            {
                var group = issueOrGroup.ToGroup();
            <tr class="gh-table-group-header">
                    <td>
                        @if (SearchResults.IsExpanded(group))
                    {
                        <span class="oi oi-minus gh-table-group-toggle" title="Collapse" @onclick="_ => SearchResults.Collapse(group)"></span>
                    }
                    else
                    {
                        <span class="oi oi-plus gh-table-group-toggle" title="Expand" @onclick="_ => SearchResults.Expand(group)"></span>
                    }
                    </td>
                    <td class="w-100 p-2 text-break">
                        <div class="gh-group-key-list">
                            @foreach (var key in group.Keys)
                        {
                            <span class="gh-group-key">@key</span>
                        }
                        </div>
                    </td>
                    <td class="d-none d-md-table-cell">
                    </td>
                    <td class="d-none d-md-table-cell">
                        @group.Children.Length.ToString("N0")
                    </td>
                </tr>
            }
            else if (issueOrGroup.IsIssue)
            {
                var issue = issueOrGroup.ToIssue();
            <tr>
                    <td>
                        @{
                        var isClosed = !issue.IsOpen;
                        var isPr = issue.IsPullRequest;
                        var isDraft = issue.IsDraft;
                        var isMerged = issue.IsMerged;
                        var textColor = isMerged
                                            ? "text-merged"
                                            : isClosed
                                                ? "text-danger"
                                                : isDraft
                                                    ? "text-secondary"
                                                    : "text-success";

                        var icon = isMerged
                                    ? "octicon:git-merge-16"
                                    : isPr
                                        ? "octicon:git-pull-request-16"
                                        : isClosed
                                            ? "octicon:issue-closed-16"
                                            : "octicon:issue-opened-16";

                        var title = (isPr, isDraft, isMerged, isClosed) switch
                        {
                            (true, false, false, false) => "Open PR",
                            (true, true, false, false) => "Open Draft PR",
                            (true, _, true, _) => "Merged PR",
                            (true, _, false, true) => "Closed PR",
                            (false, _, _, false) => "Open Issue",
                            _ => "Closed Issue"
                        };
                    }
                        <span class="iconify @textColor" data-icon="@icon" data-inline="false" title="@title"></span>
                    </td>
                    <td class="w-100 p-2 text-break">
                        <div>
                            <a class="gh-issue-title" href="@issue.Url">@issue.Title.HighlightCode()</a>
                            <span>
                                @foreach (var label in issue.Labels)
                            {
                                var labelR = label.Color.R;
                                var labelG = label.Color.G;
                                var labelB = label.Color.B;
                                var labelH = label.Color.GetHue();
                                var labelS = label.Color.GetSaturation() * 100;
                                var labelL = label.Color.GetBrightness() * 100;
                                var style = "";
                                style += $"--label-r: {labelR};";
                                style += $"--label-g: {labelG};";
                                style += $"--label-b: {labelB};";
                                style += $"--label-h: {labelH};";
                                style += $"--label-s: {labelS};";
                                style += $"--label-l: {labelL};";

                                <span class="gh-label"
                                          title="@label.Description"
                                          style="@style">@label.Name.ExpandEmojis()</span>
                            }
                            </span>
                        </div>
                        <div class="small text-muted">
                            @if (isMerged)
                        {
                            <text>@issue.Repo.Org/@issue.Repo.Name#@issue.Number by @issue.CreatedBy was merged @issue.ClosedAt.Humanize()</text>
                        }
                        else if (isClosed)
                        {
                            <text>@issue.Repo.Org/@issue.Repo.Name#@issue.Number by @issue.CreatedBy was closed @issue.ClosedAt.Humanize()</text>
                        }
                        else
                        {
                            <text>@issue.Repo.Org/@issue.Repo.Name#@issue.Number opened by @issue.CreatedBy @issue.CreatedAt.Humanize()</text>

                            @if (includeUpdatedAt && issue.UpdatedAt != null)
                            {
                                <span class="ml-2 mr-1 oi oi-clock text-muted" aria-hidden="true"></span><text>updated @issue.UpdatedAt.Value.Humanize()</text>
                            }
                        }

                            @if (issue.Milestone != null)
                        {
                            <span class="ml-2 mr-1 oi oi-signpost text-muted" aria-hidden="true"></span><span title="@issue.Milestone.Description">@issue.Milestone.Title</span>
                        }
                        </div>
                    </td>
                    <td class="d-none d-md-table-cell">
                        @if (issue.Assignees.Length > 0)
                    {
                        <div class="d-flex flex-row">
                                @foreach (var assignee in issue.Assignees.Take(3))
                            {
                                <img class="rounded-circle mx-1" src="https://github.com/@(assignee).png" width="20" height="20" title="Assigned to @assignee" />
                            }
                            </div>
                    }
                    </td>
                    <td class="d-none d-md-table-cell">
                        @if (issue.Comments > 0)
                    {
                        <span class="text-nowrap text-muted">
                                <span class="iconify" data-icon="octicon:comment-16" data-inline="false"></span> @issue.Comments
                            </span>
                    }
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>

    @if (SearchResults.PageCount > 1)
{
    var previousDisabled = PageNumber > 1 ? "" : "disabled";
    var nextDisabled = PageNumber < SearchResults.PageCount ? "" : "disabled";
    var pageIndex = PageNumber - 1;
    var lastPageIndex = SearchResults.PageCount - 1;

    var middle = new Range(Math.Max(0, pageIndex - 2),
                           Math.Min(lastPageIndex, pageIndex + 3));

    if (middle.Start.Value < 4)
        middle = new Range(0, middle.End);

    if (middle.End.Value - 1 > lastPageIndex - 4)
        middle = new Range(middle.Start, lastPageIndex + 1);

    if (middle.GetOffsetAndLength(lastPageIndex + 1).Length < 5)
    {
        if (middle.Start.Value == 0)
            middle = new Range(0, Math.Min(4, lastPageIndex) + 1);
        else
            middle = new Range(Math.Max(lastPageIndex - 4, 0), lastPageIndex + 1);
    }

    var left = middle.Start.Value == 0
        ? new Range(0, 0)
        : new Range(0, 2);

    var right = middle.End.Value - 1 == lastPageIndex
        ? new Range(lastPageIndex, 0)
        : new Range(lastPageIndex - 1, lastPageIndex + 1);

    @* Small pagination *@

    
        <ul class="pagination pagination-lg justify-content-center d-md-none">
            <li class="page-item @previousDisabled">
                <a class="page-link" href="#" tabindex="-1" @onclick:preventDefault @onclick="() => PageNumber--"><span class="oi oi-chevron-left"></span></a>
            </li>
            <li class="page-item">
                <a class="page-link disabled small">@PageNumber of @SearchResults.PageCount</a>
            </li>
            <li class="page-item @nextDisabled">
                <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber++"><span class="oi oi-chevron-right"></span></a>
            </li>
        </ul>

    @* Large pagination *@

    
        <ul class="pagination justify-content-center d-none d-md-flex">
            <li class="page-item @previousDisabled">
                <a class="page-link" href="#" tabindex="-1" @onclick:preventDefault @onclick="() => PageNumber--"><span class="oi oi-chevron-left small"></span></a>
            </li>

            @for (var i = left.Start.Value; i < left.End.Value; i++)
        {
            var pageNumber = i + 1;
            <li class="page-item">
                    <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber = pageNumber">@pageNumber</a>
                </li>
        }

            @if (left.End.Value < middle.Start.Value)
        {
            <li class="page-item">
                    <a class="page-link disabled">...</a>
                </li>
        }

            @for (var i = middle.Start.Value; i < middle.End.Value; i++)
        {
            var pageNumber = i + 1;
            var active = pageNumber == PageNumber ? "active" : "";
            <li class="page-item @active">
                    <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber = pageNumber">@pageNumber</a>
                </li>
        }

            @if (middle.End.Value < right.Start.Value)
        {
            <li class="page-item">
                    <a class="page-link disabled">...</a>
                </li>
        }

            @for (var i = right.Start.Value; i < right.End.Value; i++)
        {
            var pageNumber = i + 1;
            <li class="page-item">
                    <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber = pageNumber">@pageNumber</a>
                </li>
        }

            <li class="page-item @nextDisabled">
                <a class="page-link" href="#" @onclick:preventDefault @onclick="() => PageNumber++"><span class="oi oi-chevron-right small"></span></a>
            </li>
        </ul>
}
}
